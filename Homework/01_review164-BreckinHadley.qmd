---
title: 'Review of Data Science 1'
format:
  html: default
editor_options: 
  chunk_output_type: console
---

You can download this .qmd file from [here](https://github.com/proback/264_fall_2025/blob/main/01_review164.qmd).  Just hit the Download Raw File button.


### Determinants of COVID vaccination rates

```{r}
#| include: false

library(tidyverse)
vaccine_data <- read_csv("https://proback.github.io/264_fall_2025/Data/vaccinations_2021.csv")
```

First, a little detour to describe several alternatives for reading in data:

If you navigate to [my Github account](https://github.com/proback), and find the `264_fall_2025` repo, there is a Data folder inside.  You can then click on `vacc_Mar21.csv` to see the data we want to download.   [This link](https://github.com/proback/264_fall_2025/blob/main/Data/vaccinations_2021.csv) should also get you there, but it's good to be able to navigate there yourself.


```{r}
#| eval: false

# Approach 4
vaccine_data <- read_csv("https://raw.githubusercontent.com/proback/264_fall_2025/refs/heads/main/Data/vaccinations_2021.csv")  #<4>

```

1. Approach 1: create a Data folder in the same location where this .qmd file resides, and then store vaccinations_2021.csv in that Data folder
2. Approach 2: give R the complete path to the location of vaccinations_2021.csv, starting with Home (~)
3. Approach 3: link to our course webpage, and then know we have a Data folder containing all our csvs
4. Approach 4: navigate to the data in GitHub, hit the Raw button, and copy that link


A recent Stat 272 project examined determinants of covid vaccination rates at the county level.  Our data set contains 3053 rows (1 for each county in the US) and 14 columns; here is a quick description of the variables we'll be using:

- `state` = state the county is located in
- `county` = name of the county
- `region` = region the state is located in
- `metro_status` = Is the county considered "Metro" or "Non-metro"?
- `rural_urban_code` = from 1 (most urban) to 9 (most rural)
- `perc_complete_vac` = percent of county completely vaccinated as of 11/9/21
- `tot_pop` = total population in the county
- `votes_Trump` = number of votes for Trump in the county in 2020
- `votes_Biden` = number of votes for Biden in the county in 2020
- `perc_Biden` = percent of votes for Biden in the county in 2020
- `ed_somecol_perc` = percent with some education beyond high school (but not a Bachelor's degree)
- `ed_bachormore_perc` = percent with a Bachelor's degree or more
- `unemployment_rate_2020` = county unemployment rate in 2020
- `median_HHincome_2019` = county's median household income in 2019


1. Consider only Minnesota and its surrounding states (Iowa, Wisconsin, North Dakota, and South Dakota).  We want to examine the relationship between the percentage who voted for Biden and the percentage of complete vaccinations by state.  Generate two plots to examine this relationship:

a) A scatterplot with points and smoothers colored by state.  Make sure the legend is ordered in a meaningful way, and include good labels on your axes and your legend.  Also leave off the error bars from your smoothers.

```{r}

vaccine_data |>
  filter(state %in% c("Minnesota" , "Iowa" , "Wisconsin", "North Dakota", "South Dakota" )) |>
  ggplot(aes(x = perc_Biden, y = perc_complete_vac, color = fct_reorder2(state, perc_Biden, perc_complete_vac)))+
  geom_point() + 
  geom_smooth( se = FALSE) +
  labs( x = "Percent Voted for Biden",
        y = "Percent completley Vaccinated",
        title = "TBD",
        color = "State")
```

b) One plot per state containing a scatterplot and a smoother.

```{r}

vaccine_data |>
  filter(state %in% c("Minnesota" , "Iowa" , "Wisconsin", "North Dakota", "South Dakota" )) |>
  ggplot(aes(x = perc_Biden, y = perc_complete_vac, color = state))+
  geom_point() + 
  geom_smooth( se = FALSE) +
  labs( x = "Percent Voted for Biden",
        y = "Percent completley Vaccinated",
        title = "TBD",
        color = "State") +
  facet_wrap(~state)
```

Describe which plot you prefer and why.  What can you learn from your preferred plot?

>I would prefer the first plot without the facet wrap because it makes it easier to compare trends across states. Ultimatley it depends on what question you are trying to answer.

4. Produce 3 different plots for illustrating the relationship between the rural_urban_code and percent vaccinated.  Hint: you can sometimes turn numeric variables into categorical variables for plotting purposes (e.g. `as.factor()`, `ifelse()`).

```{r}
#Boxplot
vaccine_data |>
  ggplot(aes(x = as.factor(rural_urban_code), y = perc_complete_vac)) +
  geom_boxplot()

```

```{r}
#Barplot
vaccine_data|>
ggplot(aes(x = as.factor(rural_urban_code), y = perc_complete_vac)) +
  geom_col()

```

```{r}
#Scatterplot with Jitter
vaccine_data|>
ggplot(aes(x = as.factor(rural_urban_code), y = perc_complete_vac)) +
  geom_point() 


```

State your favorite plot, why you like it better than the other two, and what you can learn from your favorite plot.  Create an alt text description of your favorite plot, using the Four Ingredient Model.  See [this link](https://drive.google.com/file/d/1BuEbL6vETBcFULmtlrwwZBUYhdEg0Zqb/view?usp=sharing) for reminders and references about alt text.

>The best plot in my opinion is the boxplot becaue it gives the best view of the data as a whole. It also makes it easy to compare across codes. The other two plots just dont shows a much information as the boxplot and in most cases the more information the better. The boxplot shows IQR,Median,Range and potential outliers in the data.

>Alt Text: This graph is a boxplot that is showing the distribution of complete vaccine percentage across nine rural codes. The x-axis is the catagorical variable rural_urban_code as a factor (Labeled 1-9). The y-axis shows the vaccination percentages which range from 0-100%. Each rural code has its own boxplot and allof the box plots display the median, range, outliers, and IQR for its respective code. This plot shows that there is potential variation in vaccination rates in differnt rural/urban location based on the differnt spreads shown in the graph.


5. BEFORE running the code below, sketch the plot that will be produced by R.  AFTER running the code, describe what conclusion(s) can we draw from this plot?  

```{r}
#| eval: FALSE

vaccine_data |>
  filter(!is.na(perc_Biden)) |>
  mutate(big_states = fct_lump(state, n = 10)) |>
  group_by(big_states) |>
  summarize(IQR_Biden = IQR(perc_Biden)) |>
  mutate(big_states = fct_reorder(big_states, IQR_Biden)) |>
  ggplot() + 
    geom_point(aes(x = IQR_Biden, y = big_states))
```

>We can conclude that Virginia has the most variablity amoung its counties. Ranks the top 10 states in terms of variability.


6. In this question we will focus only on the 12 states in the Midwest (i.e. where region == "Midwest").

a) Create a tibble with the following information for each state.  Order states from least to greatest state population.

- number of different `rural_urban_code`s represented among the state's counties (there are 9 possible)
- total state population
- proportion of Metro counties
- median unemployment rate 

```{r}
vaccine_data|>
  filter(region == "Midwest")|>
  group_by(state)|>
  summarize(num_codes = n_distinct(rural_urban_code),
            population = sum(tot_pop),
            prop_metro = mean(metro_status == "Metro",na.rm = TRUE),
            med_unemp_rate = median(unemployment_rate_2020))|>
  arrange(population)

```

b) Use your tibble in (a) to produce a plot of the relationship between proportion of Metro counties and median unemployment rate.  Points should be colored by the number of different `rural_urban_code`s in a state, but a single linear trend should be fit to all points.  What can you conclude from the plot?

```{r}
vaccine_data|>
  filter(region == "Midwest")|>
  group_by(state)|>
  summarize(num_codes = n_distinct(rural_urban_code),
            population = sum(tot_pop),
            prop_metro = mean(metro_status == "Metro",na.rm = TRUE),
            med_unemp_rate = median(unemployment_rate_2020))|>
  arrange(population)|>

ggplot(aes(x = prop_metro, y = med_unemp_rate, color = num_codes))+
  geom_point()

```

8. Hypothetical R chunk #1:

```{r}
#| eval: false

# Hypothetical R chunk 1
temp <- vaccine_data |>
  mutate(new_perc_vac = ifelse(perc_complete_vac > 95, NA, perc_complete_vac),
         MD_group = cut_number(people_per_MD, 3)) |>
  group_by(MD_group) |>
  summarise(n = n(),
            mean_perc_vac = mean(new_perc_vac, na.rm = TRUE),
            mean_white = mean(perc_white, na.rm = TRUE))
```  

a) Describe the tibble `temp` created above.  What would be the dimensions?  What do rows and columns represent?

>The tibble would have 3 rows and 4 columns. The columns would be MD_group, n, mean_vac, and mean_white while the rows would be the counties

b) What would happen if we replaced `new_perc_vac = ifelse(perc_complete_vac > 95, NA, perc_complete_vac)` with `new_perc_vac = ifelse(perc_complete_vac > 95, perc_complete_vac, NA)`?

>This change would result in it only analyzing the counties that have a vaccination rate above 95%.

c) What would happen if we replaced `mean_white = mean(perc_white, na.rm = TRUE)` with `mean_white = mean(perc_white)`?

>This woukld include the NA values for mean_white. This could also change all of the mean values to NA if any missing values are present in the dataset. 

d) What would happen if we removed `group_by(MD_group)`?

>If we removed group_by(MD_group) we would just get a long singular line summarizing the entire dataset.

9. Hypothetical R chunk #2:

```{r}
#| eval: false

# Hypothetical R chunk 2
ggplot(data = vaccine_data) +
  geom_point(mapping = aes(x = perc_over_65, y = perc_complete_vac, 
                           color = HR_party)) +
  geom_smooth()

temp <- vaccine_data |>
  group_by(HR_party) |>
  summarise(var1 = n()) |>
  arrange(desc(var1)) |>
  slice_head(n = 3)

vaccine_data |>
  ggplot(mapping = aes(x = fct_reorder(HR_party, perc_over_65, .fun = median), 
                       y = perc_over_65)) +
    geom_boxplot()
```

a) Why would the first plot produce an error?

>The first error would be regarding perc_over_65 because it does not exist in our dataset.

b) Describe the tibble `temp` created above.  What would be the dimensions?  What do rows and columns represent?

>The tibble would have 3 rows and 2 columns. The rows would be the top 3 HR parties and the columns would be HR_Party and var1.

c) What would happen if we replaced `fct_reorder(HR_party, perc_over_65, .fun = median)` with `HR_party`?

>This change would just set the x-axis back to its default.


10. Hypothetical R chunk #3:

```{r}
#| eval: false

# Hypothetical R chunk 3
vaccine_data |>
  filter(!is.na(people_per_MD)) |>
  mutate(state_lump = fct_lump(state, n = 4)) |>
  group_by(state_lump, rural_urban_code) |>
  summarise(mean_people_per_MD = mean(people_per_MD)) |>
  ggplot(mapping = aes(x = rural_urban_code, y = mean_people_per_MD, 
      colour = fct_reorder2(state_lump, rural_urban_code, mean_people_per_MD))) +
    geom_line()
```

a) Describe the tibble piped into the ggplot above.  What would be the dimensions?  What do rows and columns represent?

>The tibble would have 5 rows and 3 columns. The rows would be the top 4 states and other while the columns would be state_lump, rural_urban_code, and mean_people_per_MD.

b) Carefully describe the plot created above.

>This would create a geom_line plot with mean_people_per_MD on the y axis and rural_urban_code on the x-axis. We would have 5 differnt colored lines with each representing the top 4 states and other.

c) What would happen if we removed `filter(!is.na(people_per_MD))`?

>This would include the NA values which could change the mean to NA if the dataset is missing values.

d) What would happen if we replaced `fct_reorder2(state_lump, rural_urban_code, mean_people_per_MD)` with `state_lump`?

>If we swithced to state_lump the legend would be set back to its original ordering.
